1.14

1.13, 10 March 2012
  * added fat and longStringLength options to allow finer control over offset
    caching
  * added Match.leftLeaf() and Match.rightLeaf()
  * added some convenience methods to Match: hasLabel(Pattern),
    hasLabelStartingWith(String), hasLabelEndingWith(String)

1.12, 22 January 2012
  * fixed issues with description containing cyclic and reversed rules
  * created array-based offset cache for faster puts and gets
  * fixed description regression

1.11, 18 January 2012
  * fixed some bugs in Grammar.describe()
  * added a good bit of HTML documentation
  * added more tests for match completion to the Match tree walking methods

1.10, 13 January 2012
  * improved studying algorithm
  * study now works for backwards assertions as well as forwards

1.09, 8 January 2012
  * added '!' as a synonym of 'not' and removed requirement for a space after,
    so '! before', '!before', 'notafter', etc. are all now acceptable
  * preserving all redundant labels for a rule, so
    ROOT = <a>
       a = <b>
       b = 'c'
    will produce matches findable by the labels "a" and "b". I.e., it
    normalizes to ROOT = [{a,b} 'c']
  * made handling Grammar used cached root rule rather than always fetching
    rule from rules map

1.08, 5 January 2012
  * improved Match completion, replacing establishParentage() and
    setGroup(CharSequence) with done(CharSequence) and eliminating a bug
    thereby
  * added 'after', 'before', 'not after', and 'not before' as synonyms of
    '~-', '~', '!-', '!+', respectively.

1.07, 3 January 2012
  * fixed ReversedCharSequence.subsequence(int,int)
  * fixed conditionalization of reversed rules

1.06, 2 January 2012
  * made cyclic rules reversible
  * fixed various logical condition bugs
  * made conditions provide log output
  * created single-line grammar constructor
  * renamed searching methods of Match to make them shorter and more intuitive
  * made all backwards assertions use a common reversed character sequence
  * removed the requirement that rules and conditions be serializable (kept
    actual serializability of all rules and conditions defined in dfh.grammar)

1.05, 23 December 2011
  * added lean memory cache option
  * added walk(MatchTest) method to Match
  * fixed bug where an error was thrown when calling labels() on a match
    produced by a deferred definition rule in an alternation
  * tags -- the foo in [{foo} 'bar'] -- now reported in description

1.04, 21 December 2011
  * fixed tagging bug in alternation rules such as foo = [{bar} 'a' | 'b' ]
  * added dot() method to Match
  * added completion check on Match.labels()
  * improved cache checking
  * improved tagging consistency
  * removed redundant rule faux optimization
  
1.03, 14 December 2011
  * fixed zero-width final leaf bug where studying was causing <rule> /\s*/,
    for example, to always fail to match
  * establish parentage and group of rightmost match in case of mismatch

1.02, 10 December 2011
  * added n^ construct to allow repetition and nesting of back references

1.01, 8 December 2011
  * fixed failure to catch single colon barrier exception
  * made all exceptions thrown by grammar code runtime exceptions
  * complex conditions implemented

1.0, 5 December 2011
  * updated version number from .25 to 1.0 in one fell swoop
  * began Changelog
  * made regexes repeatable
  * renamed longestTokenMatching to longestMatch
  * converted Condition from interface to abstract class and added code
    to handle reversed character sequences
  * added method to ReversedCharSequence to show whether it is reversed
    relative to the base sequence
  * replaced Match.getFirst(MatchTest) with Match.choose(MatchTest); new
    method is slightly more efficient
  * added overlap() method to Match to facilitate finding overlapping matches
