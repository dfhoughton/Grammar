Desired items are preceded by a '.'; completed items, by a '*'; discarded items, by a '-'.

* change parsing rules so that angle brackets are only required to the right of '='
* parameterize describe() so it either alphabetizes of lists rules in order of dependence
- implement regex reversal
* implement tagging
* implement in-line regexes
* implement reversibility of externally defined rules
* keep rules distinct by tags but allow functionally equivalent rules to share offset cache
* change default study value based on match type
* fix external rule renaming bug
* preserve rightmost offset matched to to improve debugging
* allow boolean combinations of conditions
* allow special notation for non-reversible, non-same-rule backreferences
. allow notation to selectively disable studying of certain expressions
* call setGroup() on righmost match in event of failure
. make sure non-terminal matches are using their subcache
. add zero-width optimizations to conditionalized leaf rules
* add labels() method to Match
* make cyclic rules reversible
. make use of root and rules field in Grammar more sane; perhaps eliminate latter altogether
. clean up uid() uniqueId() business
* makes description() include tags
. add 'before', 'after', 'notbefore', 'notafter' as synonyms for ~/~+, ~-, !/!+, !- respectively
. make assertions studiable
* modify lookbehinds to use a single reversed character sequence
* make conditions log their activity
. create more thorough unit tests for complex conditions
* rename searching methods in Match to make them more intuitive
. create xpath-like convention for searching matches
* create single-line Grammar constructor and string LineReader
* construct round trip tests for Grammar.description()
* remove Serializable constraint on Rule
. fix reversed rule logging bug
. change stack separator in logging so it doesn't look like a backtracking barrier
