Desired items are preceded by a '.'; completed items, by a '*'; discarded items, by a '-'.
From time to time I will move the set of completed or discarded items to the COMPLETED
section at the end of the document.

- allow notation to selectively disable studying of certain expressions
. clean up uid() uniqueId() business
. make sure conditionalized terminals are being cached properly
. profile some matching to figure out what could be optimized
. make Condition.copy() clone when possible
. add option to turn off condition testing
. bail out of recursion via exception rather than the current laborious and expensive reeling in of failed tries
. added unit tests for Match.hasLabel(String), which appears to have a latent bug having to do with alternations
* add option to discover start offsets for matches via some index expression
* create benchmarks for indexers
. document indexers in performance and syntax portions of HTML documentation

COMPLETED
=========
* change parsing rules so that angle brackets are only required to the right of '='
* parameterize describe() so it either alphabetizes of lists rules in order of dependence
- implement regex reversal
* implement tagging
* implement in-line regexes
* implement reversibility of externally defined rules
* keep rules distinct by tags but allow functionally equivalent rules to share offset cache
* change default study value based on match type
* fix external rule renaming bug
* preserve rightmost offset matched to to improve debugging
* allow boolean combinations of conditions
* allow special notation for non-reversible, non-same-rule backreferences
* call setGroup() on righmost match in event of failure
* add labels() method to Match
* make cyclic rules reversible
* make use of root and rules field in Grammar more sane; perhaps eliminate latter altogether
* makes description() include tags
* add 'before', 'after', 'notbefore', 'notafter' as synonyms for ~/~+, ~-, !/!+, !- respectively
* make assertions studiable
* modify lookbehinds to use a single reversed character sequence
* make conditions log their activity
* create more thorough unit tests for complex conditions
* rename searching methods in Match to make them more intuitive
* create single-line Grammar constructor and string LineReader
* construct round trip tests for Grammar.description()
* remove Serializable constraint on Rule
* fix reversed rule logging bug
* change stack separator in logging so it doesn't look like a backtracking barrier
* fix studying of cyclic grammars
* simplify study method given improved studying algorithm
- stop caching success
* document new assertion syntax
* modify grammar grammar
* document up-level back references
* make sure non-terminal matches are using their subcache
* add fat option to Options
* fix isTerminal() so it checks on the generating rule
* make sure conditions are copied during grammar composition
* clean up javadoc warnings
* make sure labels propagate properly during grammar composition
* refactor Rule.subRules to reduce repetition
* fix deepCopy so that the field reversed is properly handled everywhere
* add license file to jar
* optimize cycleCheck so it only occurs in cyclic rule matchers
* optimize cycleCheck so it is only done for left-headed cycles
* remove requirement that root rule be called ROOT
* eliminated cycle parameter in global state
* document logically complex conditions
* add document for new fat and longStringLength to Options documentation
* renamed composed in rules only when functionally distinct
* fix documentation of root rule
* add more unit tests for grammar description after composition with tagging
* clone terminal nodes before assigning parents
* create xpath-like convention for searching matches
* put tokenization handling into dfh.grammar
* document new tokenization handling
* make Options reusable
* make convenience methods Match.closest(String) and Match.closest(Pattern)
* preserve original rule names as labels where necessary during grammar composition
* comment on PEG and Packrat in documentation
* add test for ['foo'*|'bar'*]* infinite loops
* turn off studying in all cases
* examine logging of elements such as <s>?
* fix asteriskQ test regression in ConditionTest
* implement multi-line rules
* create ConditionalizedReference rule to handle rule = <a> (c)
- change log text "result for <ROOT>" to "result for <ROOT> n", where n is the offset being tested
- ensure proper handling of rule ::= 'foo' ['bar' 'quux']+
* factor condition handling into ConditionalRule
* replace := with .= and ::= with :=
* create . explicit whitespace rule
- add zero-width optimizations to conditionalized leaf rules (I don't remember what
  I was thinking with this. Were the optimizations good? Gah. Will probably deprecate
  this one.)
- make sure all rules are serializable
* add a child(int) method to Match so one can say n.child(0) instead of n.children()[0]
* implement automatic space insertion in sequences upon specification
* create True and False conditions to simplify turning conditions to always on or always off
* fix typos in documentation
* edit grammar grammar in documentation
* document multi-line rules
* document semantics of xor operator in conditions
* make sure xor conditions aren't being improperly normalized -- "a^(b^c)" != "a^b^c"
* clean up compiler code to remove vestiges of old "<ROOT>" convention
* flesh out performance section of documentation; suggest combining index or regex and grammars
* document new whitespace rules
* clean up javadocs
* check for bugs when calling describe with incomplete grammar
