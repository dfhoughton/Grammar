Desired items are preceded by a '.'; completed items, by a '*'; discarded items, by a '-'.
From time to time I will move the set of completed or discarded items to the COMPLETED
section at the end of the document.

. add zero-width optimizations to conditionalized leaf rules
. allow notation to selectively disable studying of certain expressions
. clean up uid() uniqueId() business
. create xpath-like convention for searching matches
. make sure conditionalized terminals are being cached properly
. make sure non-terminal matches are using their subcache
. profile some matching to figure out what could be optimized
. stop caching success
. document logically complex conditions
* document new assertion syntax
* modify grammar grammar
* document up-level back references
. clean up javadoc warnings

COMPLETED
=========
* change parsing rules so that angle brackets are only required to the right of '='
* parameterize describe() so it either alphabetizes of lists rules in order of dependence
- implement regex reversal
* implement tagging
* implement in-line regexes
* implement reversibility of externally defined rules
* keep rules distinct by tags but allow functionally equivalent rules to share offset cache
* change default study value based on match type
* fix external rule renaming bug
* preserve rightmost offset matched to to improve debugging
* allow boolean combinations of conditions
* allow special notation for non-reversible, non-same-rule backreferences
* call setGroup() on righmost match in event of failure
* add labels() method to Match
* make cyclic rules reversible
* make use of root and rules field in Grammar more sane; perhaps eliminate latter altogether
* makes description() include tags
* add 'before', 'after', 'notbefore', 'notafter' as synonyms for ~/~+, ~-, !/!+, !- respectively
* make assertions studiable
* modify lookbehinds to use a single reversed character sequence
* make conditions log their activity
* create more thorough unit tests for complex conditions
* rename searching methods in Match to make them more intuitive
* create single-line Grammar constructor and string LineReader
* construct round trip tests for Grammar.description()
* remove Serializable constraint on Rule
* fix reversed rule logging bug
* change stack separator in logging so it doesn't look like a backtracking barrier
* fix studying of cyclic grammars
* simplify study method given improved studying algorithm
